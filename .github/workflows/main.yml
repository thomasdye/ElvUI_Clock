name: Main Workflow

on:
  pull_request:
    branches:
      - release
      - dev
    types: [opened, edited, closed]

jobs:
  check-pr-name:
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'edited')
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Check if PR is from dev to release
      id: check-branches
      run: |
        if [[ "${{ github.event.pull_request.base.ref }}" == "release" && "${{ github.event.pull_request.head.ref }}" == "dev" ]]; then
          echo "branches_matched=true" >> $GITHUB_ENV
        else
          echo "branches_matched=false" >> $GITHUB_ENV
        fi

    - name: Validate PR title
      if: env.branches_matched == 'true'
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        if [[ ! "$PR_TITLE" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: PR title does not match the required pattern."
          exit 1
        else
          echo "PR title is valid."
        fi

    - name: Compare version numbers
      if: env.branches_matched == 'true'
      run: |
        # Extract version from dev branch
        DEV_VERSION=$(git show origin/dev:ElvUI_Clock/ElvUI_Clock.toc | grep -E '^## Version' | awk '{print $3}')
        echo "DEV_VERSION=$DEV_VERSION" >> $GITHUB_ENV

        # Extract version from release branch
        RELEASE_VERSION=$(git show origin/release:ElvUI_Clock/ElvUI_Clock.toc | grep -E '^## Version' | awk '{print $3}')
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

        # Compare versions
        if [[ "$DEV_VERSION" == "$RELEASE_VERSION" ]]; then
          echo "Error: Version number has not increased. DEV_VERSION ($DEV_VERSION) == RELEASE_VERSION ($RELEASE_VERSION)"
          exit 1
        else
          echo "Version number is valid. DEV_VERSION ($DEV_VERSION) > RELEASE_VERSION ($RELEASE_VERSION)"
        fi

  check-dev-word:
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'dev'
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Search for "Dev" in files
      run: |
        if grep -ri "Dev" .; then
          echo "The word 'Dev' was found in the files. Please remove it."
          exit 1
        else
          echo "No 'Dev' word found in files. All good!"
        fi

  create_release:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Extract PR title and check tag format
      id: extract_pr_title
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        if [[ "$PR_TITLE" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "PR_TAG=${PR_TITLE}" >> $GITHUB_ENV
        else
          echo "Error: PR title does not match the required pattern."
          exit 1
        fi

    - name: Generate Release Notes
      id: generate_release_notes
      run: |
        echo "Generating release notes for version ${{ env.PR_TAG }}" > release_notes.md
        echo "" >> release_notes.md
        echo "## Changes" >> release_notes.md
        echo "- Include any notable changes here." >> release_notes.md

    - name: Create Draft Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.PR_TAG }}
        release_name: ${{ env.PR_TAG }}
        draft: true
        commitish: release
        body_path: ./release_notes.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
